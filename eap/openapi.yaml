openapi: 3.0.0

info:
    version: '1.0'
    title: 'TasteBuds API'
    description: 'Web Resources Specification (A7) for TasteBuds'

servers:
    url: http://lbaw2135-prod.fe.up.pt
    description: Production server
  
externalDocs:
    description: Find more info here.
    url: https://git.fe.up.pt/lbaw/lbaw2021/lbaw2135/-/wikis/EAP:-Architecture-Specification-and-Prototype#a7-high-level-architecture-privileges-web-resources-specification

tags:
    - name: 'M01: Authentication and Individual Profile'
    - name: 'M02: Recipes, categories, groups and members'
    - name: 'M03: Chat'
    - name: 'M04: Information'
    - name: 'M05: Web resources associated with the administrator pages, namely the users and reports management'
  
paths:
    # 1 - Tiago
    /

    # 2 - Rui
    /login:
        get: 
            operationId: R1002
            summary: 'R1002: Login form'
            description: 'Provide login form. Access: PUB'
            tags: 
                - 'M01: Authentication and Individual Profile'
            responses:    
                '200':
                    description: 'Ok. Show [UI02](http://lbaw2135-piu.lbaw-prod.fe.up.pt/pages/signIn.php)'
        post:
            operationId: R1003
            summary: 'R1093: Login Action'
            description: 'Processes the login form submission. Access: PUB'
            tags:
                - 'M01: Authentication and Individual Profile'
        
            requestBody:
                required: true
                content:
                application/x-www-form-urlencoded:
                    schema:
                        type: object
                        properties:
                            email:          
                                type: string
                            password:   
                                type: string
                        required:
                            - email
                            - password
        
            responses:
                '302':
                description: 'Redirect after processing the login credentials.'
                headers:
                    Location:
                        schema:
                            type: string
                        examples:
                            302Success:
                                description: 'Successful authentication. Redirect to feed.'
                                value: '/feed'
                            302Error:
                                description: 'Failed authentication. Redirect to login form.'
                                value: '/login'

    # 3 - Tiago
    /register

    # 4 - Alexandre
    /logout
    
    # 5 - Rui
    /member/{username}/recipes:
        get: 
            operationId: R10XX
            summary: 'R10XX: Member recipes'
            description: 'Provide member recipes page. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                - in: path
                name: username
                schema:
                    type: string
                required: true

            responses:    
                '200':
                    description: 'Ok. Show [UI09](http://lbaw2135-piu.lbaw-prod.fe.up.pt/pages/profile.php)'

    # 6 - Rui
    /member/{username}/favourites:
        get: 
            operationId: R10XX
            summary: 'R10XX: Member favourited recipes.'
            description: 'Provide member favourited recipes page. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                - in: path
                name: username
                schema:
                    type: string
                required: true

            responses:    
                '200':
                    description: 'Ok. Show [UI11](http://lbaw2135-piu.lbaw-prod.fe.up.pt/pages/profile_favourites.php)'


    # 7 - Rafael
    /member/{username}/reviews
    
    # 8 - Tiago
    /category/{categoryId}
    
    # 9 - Alexandre
    /recipe/{recipeId}

    # 10 - Rafael
    /recipe

    # 11 - Tiago
    /group/{groupId}

    # 12 - Alexandre
    /group
    
    # 13 - Rafael
    /feed

    # 14 - Alexandre
    /chat/{recipientId}

    # 15 - Rui
    /search/{searchQuery}:
        get: 
            operationId: R10XX
            summary: 'R10XX: Search results page'
            description: 'Provide results from the performed search. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                - in: path
                name: searchQuery
                schema:
                    type: string
                required: false

            responses:    
                '200':
                    description: 'Ok. Show [UI15](http://lbaw2135-piu.lbaw-prod.fe.up.pt/pages/search.php)'

    # 16 - Tiago
    /admin/reports

    # 17 - Rafael
    /admin/users

    # 18 - Alexandre
    /about

    # 19 - Rui
    /faq:
        /member/{username}/recipes:
        get: 
            operationId: R10XX
            summary: 'R10XX: FAQ page'
            description: 'Provide FAQ page. Access: PUB'
            tags: 
                - 'M04: Information'

            responses:    
                '200':
                    description: 'Ok. Show [UI07](http://lbaw2135-piu.lbaw-prod.fe.up.pt/pages/faq.php)'
    
    /api/user:
        post:
            operationId: R2001
            summary: 'R2001: Member account'
            description: 'Create a member account. Access: PUB'
            tags: 
                - 'M01: Authentication and Individual Profile'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                        type: object
                        properties:
                            name:
                                type: string
                            username:
                                type: string
                            email:
                                type: string
                            city:
                                type: string
                            country:
                                type: integer
                            password:
                                type: string
                            profileImage:
                                type: string
                                form: binary
                        required:
                            - name
                            - username
                            - email
                            - country
                            - password
            responses:
                '200':
                    description: 'OK'
                '400':
                    description: 'Invalid Request'

    /api/user/{username}:
        get:
            operationId: R2002
            summary: 'R2002: Member information'
            description: 'Get member information in JSON. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:    
                '200':
                    description: 'OK. The authenticated user has access to all user information.'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: int
                                        name:
                                            type: string
                                        username:
                                            type: string
                                        city:
                                            type: string
                                        country:
                                            type: object
                                            properties:
                                                id: int
                                                abbreviation: string
                                                name: string
                                        creationDate:
                                            type: date
                                        score:
                                            type: float
                                        biography:
                                            type: string
                                        recipes:
                                            type: int
                                        followers:
                                            type: int
                                        following:
                                            type: int
                            example:
                                - id: 2
                                name: Mark Hasmunsen
                                username: mark_h
                                city: Bergen
                                country: 
                                    - id: 165
                                    abbreviation: "NO"
                                    name: Norway
                                creationDate: "2019-05-09"
                                score: 4.7
                                biography: "Black metal fan making food, what could go wrong?"
                                recipes: 14
                                followers: 34
                                following: 13
                '200':
                    description: 'OK. The requested user is private and the authenticated user doesn't follow him.'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: int
                                        name:
                                            type: string
                                        username:
                                            type: string
                                        recipes:
                                            type: int
                                        followers:
                                            type: int
                                        following:
                                            type: int
                            example:
                                id: 2
                                name: Mark Hasmunsen
                                username: mark_h
                                recipes: 14
                                followers: 34
                                following: 13      
        put:
            operationId: R2003
            summary: 'R2003: Edit profile'
            description: 'Edit member information. Access: OWN'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                - in: path
                name: username
                schema:
                    type: string
                required: true

            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                        type: object
                        properties:
                            name:
                                type: string
                            username:
                                type: string
                            email:
                                type: string
                            city:
                                type: string
                            country:
                                type: integer
                            password:
                                type: string
                            biography:
                                type: string
                            visibility:
                                type: boolean
                            profileImage:
                                type: string
                                format: binary
                            coverImage:
                                type: string
                                format: binary
            responses:
                '200':
                    description: 'Updated User'
                '400':
                    description: 'Invalid Request'
                '403':
                    description: 'Forbidden Access'
        delete:
            operationId: R2004
            summary: 'R2004: Delete member'
            description: 'Delete a member account. Access: OWN, ADM'
            tags: 
                - 'M02: Recipes, categories, groups and members'
                - 'M05: Administration'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:    
                '200':
                    description: 'Deleted User'
                '400':
                    description: 'Invalid Request'

    /api/user/{username}/recipes:
        get:
            operationId: R2005
            summary: 'R2005: Member recipes'
            description: "Gets the member's recipes in JSON. Access: PUB"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:
                '200':
                  description: 'OK'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                        title:
                                            type: string
                                        description:
                                            type: string
                                        creationDate:
                                            type: date
                                        rating:
                                            type: float
                                        numberOfReviews:
                                            type: int
                                        category:
                                            type: string
                                        tags:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    id: 
                                                        type: int
                                                    name:
                                                        type: string
                                        inFavourites:
                                            type: boolean
                                example:
                                    -   id: 1
                                        title: Classic Tiramisu
                                        description: Classic Italian dessert made with ladyfingers and mascarpone cheese.
                                        creationDate: 22-01-2021
                                        rating: 4.5
                                        numberOfReviews: 5
                                        category: Dessert
                                        tags: 
                                            -   id: 45
                                                name: "Vegetarian"
                                            -   id: 32
                                                name: "Zero sugar"
                                        inFavourites: false
                                        
                '400':
                    description: 'Invalid Request'
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/reviews:
        get:
            operationId: R2006
            summary: 'R2006: Member reviews'
            description: "Gets the member's reviews in JSON. Access: PUB"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:    
                '200':
                  description: 'OK'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        recipeTitle:
                                            type: string
                                        postTime:
                                            type: date
                                        givenRating:
                                            type: int
                                        givenComment:
                                            type: string
                                        recipeRating:
                                            type: float
                                        numberOfReviews:
                                            type: int
                                example:
                                    -   recipeTitle: Traditional Irish Stew
                                        postTime: 2 hours ago
                                        givenRating: 4
                                        givenComment: Absolutely delicious! Explosion of flavour...
                                        recipeRating: 4.6
                                        numberOfReviews: 20
                '400':
                    description: 'Invalid Request'
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/favourites:
        get:
            operationId: R2007
            summary: 'R2007: Member favourites'
            description: 'Gets the members favourite recipes in JSON. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:   
                '200':
                  description: 'OK'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: int
                                        recipeTitle:
                                            type: string
                                        description:
                                            type: string
                                        creationTime:
                                            type: date
                                        rating:
                                            type: float
                                        numberOfReviews:
                                            type: int
                                        category:
                                            type: string
                                        tags:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    id: 
                                                        type: int
                                                    name:
                                                        type: string
                                example:
                                    -   id: 1
                                        recipeTitle: Classic Tiramisu
                                        description: Classic Italian dessert made with ladyfingers and mascarpone cheese.
                                        creationDate: 22-01-2021
                                        rating: 4.5
                                        numberOfReviews: 5
                                        category: Dessert
                                        tags: 
                                            -   id: 45
                                                name: "Vegetarian"
                                            -   id: 32
                                                name: "Zero sugar"                                      
                '400':
                  description: 'Invalid Request'
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/following:
        get:
            operationId: R2008
            summary: 'R2008: Members that the member is following'
            description: 'Gets the members that the member is following in JSON. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:   
                '200':
                    description:
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id: 
                                            type: int
                                        name: 
                                            type: string
                                        username: 
                                            type: string
                                example:
                                    -   id: 2
                                        name: Jamie Oliver
                                        username: jamieOliverChef
                                    -   id: 3
                                        name: Kyren Wilson
                                        username: kyren77
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/followers:
        get:
            operationId: R2009
            summary: 'R2009: Member''s followers'
            description: "Gets the list of members that follow the user in JSON. Access: PUB"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:   
                '200':
                    description:
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id: 
                                            type: int
                                        name: 
                                            type: string
                                        username: 
                                            type: string
                                example:
                                    - id: 4
                                    name: Judd Trump
                                    username: trump00
                                    - id: 5
                                    name: Paul Morphy
                                    username: _morphy_
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/groups:
        get:
            operationId: R2010
            summary: "R2007: Member's groups"
            description: 'Gets the groups that the member is part of in JSON. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:   
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                        properties:
                                            id: 
                                                type: int
                                            name: 
                                                type: string
                                example:
                                    -   id: 1
                                        name: Oporto Vegetarians
                                    -   id: 2
                                        name: Lisbon Vegetarians
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested member is private and the authenticated user doesn't follow him)'
                '404':
                    description: 'The user does not exist'

    /api/user/{username}/request:
        post:
            operationId: R2011
            summary: 'R2008: Create follow request'
            description: 'Creates a follow request (if profile is public becomes a follower instantly). Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            responses:
                '200':
                  description: 'Created'
                '400':
                  description: 'Invalid Request'
                '404':
                    description: 'The user does not exist'

    /api/user/request/{username}:
        post:
            operationId: R2012
            summary: 'R2009: Accept follow request'
            description: 'Accepts a follow request. Access: OWN'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true

            responses:
                '200':
                  description: 'Accepted'
                '400':
                  description: 'Invalid Request'
                '404':
                    description: 'The request does not exist'
        delete:
            operationId: R2013
            summary: 'R2010: Decline follow request'
            description: 'Declines a follow request. Access: OWN'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: username
                    schema:
                        type: string
                    required: true
            
            requestBody:
                    required: true
                    content:
                    application/x-www-form-urlencoded:
                        schema:
                        type: object
                        properties:    
                            id: 
                                type: int
                        required:
                            - id

            responses:
                '200':
                  description: 'Deleted'
                '400':
                  description: 'Invalid Request'

    /api/users:
        get:
            operationId: R2011
            summary: 'R2011: Get all members'
            description: 'Gets all the registered members of the website in JSON. Access: ADM'
            tags: 
                - 'M05: Administration'
            responses:
                '200':
                    description: "Success"
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                        properties:
                                            id: 
                                                type: int
                                            name: 
                                                type: string
                                            username: 
                                                type: string
                                            email:
                                                type: string
                                            country:
                                                type: string
                                            city:
                                                type: string
                                            posts:
                                                type: int
                                            comments:
                                                type: int
                                            reports:
                                                type: int
                                example:
                                    -   id: 1
                                        name: Sarah Colbert
                                        username: sarahc
                                        email: sarah@gamil.com
                                        country: Portugal
                                        city: Porto
                                        numberOfPosts: 10
                                        numberOfComments: 20
                                        numberOfReports: 0
                                    -   id: 2
                                        name: Biggus Dickus
                                        username: biggus_dickus
                                        email: biggus@dickus.mp
                                        country: Italy
                                        city: Rome
                                        numberOfPosts: 15
                                        numberOfComments: 69
                                        numberOfReports: 2
                
                '400':
                    description: 'Invalid Request'    
    
    # 1 - Rafael
    /api/recipe
        post:
            operationId: R2101
            summary: 'R2101: Create recipe'
            description: 'Creates a new recipe. Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:

    # 2 - Alexandre
    /api/recipe/{recipeId}
        get:
            operationId: R2102
            summary: 'R2102: Get recipe'
            description: "Gets the recipe's information in JSON. Access: PUB"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
        put:
            operationId: R2103
            summary: 'R2103: Edit recipe'
            description: "Alters the recipe's information. Access: OWN"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
        delete:
            operationId: R2104
            summary: 'R2104: Delete recipe'
            description: 'Deletes the recipe. Access: OWN, ADM'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:

    # 3 - Rafael
    /api/recipe/{recipeId}/favourite
        post:
            operationId: R2105
            summary: 'R2105: Add a favourite recipe'
            description: "Adds the recipe to the user's favourite list. Access: MBR"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:   
                '200':
                    description:
        delete:
            operationId: R2106
            summary: 'R2106: Remove a favourite recipe'
            description: "Remove the recipe from the user's favourite list. Access: MBR"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:   
                '200':
                    description:        
    
    # 4 - Alexandre
    /api/group
        post:
            operationId: R2201
            summary: 'R2201: Create group'
            description: 'Creates a group. Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
    
    # 5 - Rafael
    /api/group/{groupId}
        get:
            operationId: R2202
            summary: 'R2202: Group information'
            description: 'Gets the information about a group. Access: PUB'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
        put:
            operationId: R2203
            summary: 'R2203: Edit group'
            description: 'Alters the groups information. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
        delete:
            operationId: R2204
            summary: 'R2204: Delete group'
            description: 'Deletes the group. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:

    # 6 - Tiago 
    /api/group/{groupId}/request
        post:
            operationId: R2205
            summary: 'R2205: Create membership request'
            description: 'Creates a membership request (if group is public becomes a member instantly). Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: groupId
                    schema:
                        type: int
                    required: true
            responses:    
                '200':
                    description: 'Success'
                '400':
                  description: 'Invalid Request'

    # 7 - Rui
    /api/group/{groupId}/request/{memberId}
        post:
            operationId: R2206
            summary: 'R2206: Accept membership request'
            description: 'Accepts a membership request, adding the member to the group. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            
            parameters:
                -   in: path
                    name: groupId
                    schema:
                        type: int
                    required: true
                -   in: path
                    name: memberId
                    schema:
                        type: int
                    required: true    
            
            responses:
                '200':
                  description: 'Accepted'
                '400':
                  description: 'Invalid Request'
                '404':
                    description: 'The request does not exist'
        delete:
            operationId: R2207
            summary: 'R2207: Refuse membership request'
            description: 'Refuses a membership request. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                -   in: path
                    name: groupId
                    schema:
                        type: int
                    required: true
                -   in: path
                    name: memberId
                    schema:
                        type: int
                    required: true 

            responses:
                '200':
                  description: 'Deleted'
                '400':
                  description: 'Invalid Request'
    
    # 8 - Alexandre
    /api/group/{groupId}/moderator/{memberId}
        post:
            operationId: R2208
            summary: 'R2208: Turn group member into moderator'
            description: 'Turn group member into moderator, adding it to the moderators group. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:
                '200':
                    description:
    
    # 9 - Alexandre
    /api/group/{groupId}/member/{memberId}
        delete:
            operationId: R2209
            summary: 'R2209: Removes member from the group'
            description: 'Removes member from the group. Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:
                '200':
                    description:

    # 10 - Rui
    /api/group/{groupId}/members
        get:
            operationId: R2210
            summary: 'R2210: Gets a list of the members of a group'
            description: 'Returns a list of the members of the group in JSON Access: MOD'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                -   in: path
                    name: groupId
                    schema:
                        type: int
                    required: true

            responses:
                '200':
                    description: "Success"
                    content: 
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                        properties:
                                            id:
                                                type: int
                                            name: 
                                                type: string
                                            username:
                                                type: string
                                example:
                                    -   id: 2
                                        name: Mark Hasmunsen              
                                        username: mark_h
                                    -   id: 3
                                        name: Kyren Wilson
                                        username: kyren77
                '403':
                    description: 'The authenticated user cannot access the requested information (the requested group is private and the authenticated user doesn't belong to it)'
                '404':
                    description: 'The group does not exist'

    # 11 - Rui
    /api/chat/{recipientId}
        get:
            operationId: R2301
            summary: 'R2301: Get chat'
            description: 'Gets a chat between two members in JSON Access: MBR'
            tags: 
                - 'M03: Chat'

            parameters:
                -   in: path
                    name: recipientId
                    schema:
                        type: int
                    required: true  

            responses:    
                '200':
                    description: "Sucess"
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                        properties:
                                            text:
                                                type: string
                                            creationDate:
                                                type: date
                                example:
                                    -   text: That's nice!
                                        creationDate: 2019-05-09 16:19
                                    -   text: Hello :)
                                        creationDate: 2019-05-12 13:09
                '400':
                    description: 'Invalid Request'
        post:
            operationId: R2302
            summary: 'R2302: Add message'
            description: 'Adds a message to a chat between two users. Access: MBR'
            tags: 
                - 'M03: Chat'

            parameters:
                -   in: path
                    name: recipientId
                    schema:
                        type: int
                    required: true  

            responses:    
                '200':
                    description: 'Success'
                '400':
                  description: 'Invalid Request'    

    # Needed route for getting user conversations (left menu in privateMessages.php)
    /api/chats
        get:
            operationId: R2302
            summary: 'R2302: Get the user conversations'
            description: 'Gets a chat between two members in JSON Access: MBR'
            tags: 
                - 'M03: Chat'

            responses:    
                '200':
                    description: 'Sucess'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                        properties:
                                            userId: 
                                                type: int
                                            name: 
                                                type: string
                                            username:
                                                type: string
                                            lastMessage:
                                                type: string    
                                            read: 
                                                type: boolean
                                            lastSenderName:
                                                type: string
                                example:
                                    -   userId: 1
                                        name: Sarah Colbert
                                        username: sarahc
                                        lastMessage: That's nice!
                                        read: false
                                        lastSenderId: Sarah
                                    -   userId: 2
                                        name: Biggus Dickus
                                        username: biggus_dickus
                                        lastMessage: Okay bro.
                                        read: true
                                        lastSenderId: You    
                '400':
                    description: 'Invalid Request'
    
    # 12 - Rafael
    /api/comment
        post:
            operationId: R2401
            summary: 'R2401: Create comment'
            description: 'Adds a comment / review to a recipe. Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:

    # 13 - Tiago
    /api/comment/{commentId}
        put:
            operationId: R2402
            summary: 'R2402: Edit comment'
            description: 'Edits a comment. Access: OWN'
            tags: 
                - 'M02: Recipes, categories, groups and members'
            parameters:
                -   in: path
                    name: commentId
                    schema:
                        type: int
                    required: true

            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                        type: object
                        properties:
                            text:
                                type: string
                            rating:
                                type: int

            responses:
                '200':
                    description: 'Updated Comment'
                '400':
                    description: 'Invalid Request'
                '403':
                    description: 'Forbidden Access'

        delete:
            operationId: R2403
            summary: 'R2403: Delete comment'
            description: 'Deletes a comment. Access: OWN'
            tags: 
                - 'M02: Recipes, categories, groups and members'
                - 'M05: Administration'
            parameters:
                -   in: path
                    name: commentId
                    schema:
                        type: int
                    required: true
            responses:    
                responses:    
                '200':
                    description: 'Deleted Comment'
                '400':
                    description: 'Invalid Request' 
            
    
    # 14 - Rui
    /api/feed?sortparam=duration&sort=asc&ingredient=tomato,flour&date=2020/05/15-2020/05/16&difficulty=hard
        get:
            operationId: R2501
            summary: "R2501: Get member's feed"
            description: 'Gets the feed of a given member in JSON. Access: MBR'
            tags: 
                - 'M02: Recipes, categories, groups and members'

            parameters:
                - in: query
                name: sort
                schema:
                    type: string
                required: false
                - in: query
                name: sortparam
                schema:
                    type: string
                required: false
                - in: query
                name: category
                schema:
                    type: string
                required: false
                - in: query
                name: tag
                schema:
                    type: string
                required: false
                - in: query
                name: rating
                schema:
                    type: string
                required: false
                - in: query
                name: ingredient
                schema:
                    type: string
                required: false
                - in: query
                name: date
                schema:
                    type: string
                required: false
                - in: query
                name: duration
                schema:
                    type: string
                required: false
                - in: query
                name: difficulty
                schema:
                    type: string
                required: false


            responses:
                '200':
                    description: "Sucess"
                    content:
                        application/json:
                            schema:
                                type: object
                                    properties:
                                        recipes:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                    title:
                                                        type: string
                                                    description:
                                                        type: string
                                                    creationDate:
                                                        type: date
                                                    rating:
                                                        type: float
                                                    numberOfReviews:
                                                        type: int
                                                    category:
                                                        type: string
                                                    tags:
                                                        type: array
                                                        items:
                                                            type: object
                                                            properties:
                                                                id: 
                                                                    type: int
                                                                name:
                                                                    type: string
                                        categories:
                                            type: array
                                            items:
                                                type: object
                                                    properties:
                                                        id:
                                                            type: int
                                                        name: 
                                                            type: string
                                        tags:
                                            type: array
                                            items:
                                                type: object
                                                    properties:
                                                        id:
                                                            type: int
                                                        name: 
                                                            type: string 
                                        trendingRecipes:
                                            type: array
                                            items:
                                                type: object
                                                    properties:
                                                        id:
                                                            type: int
                                                        title: 
                                                            type: string 
                                    example:
                                        recipes:
                                            -   id: 1
                                                title: Classic Tiramisu
                                                description: Classic Italian dessert made with ladyfingers and mascarpone cheese.
                                                creationDate: 22-01-2021
                                                rating: 4.5
                                                numberOfReviews: 5
                                                category: Dessert
                                                tags: 
                                                    -   id: 45
                                                        name: "Vegetarian"
                                                    -   id: 32
                                                        name: "Zero sugar"  
                                            -   id: 2
                                                title: Francesinha
                                                description: Portuguese delicious meal.
                                                creationDate: 20-03-2020
                                                rating: 4.8
                                                numberOfReviews: 3
                                                category: Lunch
                                                tags: 
                                                    -   id: 45
                                                        name: "Vegetarian"
                                                    -   id: 32
                                                        name: "Zero sugar"  
                                        categories:
                                            -   id: 1
                                                name: Lunch
                                            -   id: 2
                                                name: Breakfast
                                        tags:
                                            -   id: 1
                                                name: Vegetarian
                                            -   id: 2
                                                name: Low carb
                                        trendingRecipes:
                                            -   id: 3
                                                name: Cozido à portuguesa        
                '400':
                  description: 'Invalid Request' 

    # 15 - Rafael
    /api/search/{searchTerm}?sortparam=duration&sort=asc&&&ingredient=tomato,potato&time=40-100&category=2
        get:
            operationId: R2601
            summary: 'R2601: Search for a term'
            description: "Searches for a search term, accepting sort and filter parameters, returning the result as JSON. Access: PUB"
            tags: 
                - 'M02: Recipes, categories, groups and members'
            responses:    
                '200':
                    description:
    
    # 16 - Alexandre
    /api/report
        post:
            operationId: R2701
            summary: 'R2701: Creates a report'
            description: 'Creates a report. Access: MBR'
            tags: 
                - 'M05: Administration'
            responses:
                '200':
                    description:
    
    # 17 - Tiago
    /api/report/{reportId}
        delete:
            operationId: R2702
            summary: 'R2702: Dismiss report'
            description: "Deletes a report from the list. Access: ADM"
            tags: 
                - 'M05: Administration'
            parameters:
                -   in: path
                    name: reportId
                    schema:
                        type: int
                    required: true
            responses:    
                responses:    
                '200':
                    description: 'Deleted Report'
                '400':
                    description: 'Invalid Request'    
    
    # 18 - Tiago         
    /api/reports
        get:
            operationId: R2703
            summary: 'R2703: Get all reports'
            description: 'Gets all the reports in JSON. Access: ADM'
            tags: 
                - 'M05: Administration'
            responses:    
                '200':
                    description: "Success"
                    content:
                        application/json:
                            schema: 
                                type: array
                                items:
                                    type: object
                                        properties:
                                            type:    
                                                type: string
                                            id_reporter:
                                                type: int
                                            reason: 
                                                type: string
                                            active:
                                                type: boolean
                                            id_comment:
                                                type: int
                                            id_recipe:
                                                type: int
                                example:
                                    -   type: comment_report
                                        id_reporter: 1
                                        reason: Disrespectful
                                        active: true
                                        id_comment: 2
                                        id_recipe: null
                                    -   type: recipe_report
                                        id_reporter: 54
                                        reason: Disrespectful
                                        active: true
                                        id_comment: null
                                        id_recipe: 4
                                    
    # 19 - Rui
    /api/notifications
        get:
            operationId: R2801
            summary: 'R2801: Get notifications'
            description: "Gets the logged in user's notifications in JSON. Access: MBR"
            tags: 
                - 'M01: Authentication and Individual Profile'
            responses:    
                '200':
                    description: "Success"
                    content:
                        application/json:
                            schema: 
                                type: array
                                items:
                                    type: object
                                        properties:
                                            type:    
                                                type: string
                                            read:
                                                type: boolean
                                            userId: 
                                                type: int
                                            name:
                                                type: string
                                            username:
                                                type: string
                                example:
                                    -   type: followRequest
                                        read: false
                                        userId: 1
                                        name: Sarah Colbert
                                        username: sarahc 
                                    -   type: review
                                        read: true
                                        userId: 2
                                        name: Biggus Dickus
                                        username: biggus_dickus
                                    -   type: follow
                                        read: true
                                        userId: 2
                                        name: Biggus Dickus
                                        username: biggus_dickus     
                                    -   type: comment
                                        read: true
                                        userId: 2
                                        name: Biggus Dickus
                                        username: biggus_dickus 
                                    -   type: delete
                                        read: false
                                        userId: 1
                                        name: Sarah Colbert
                                        username: sarahc  
                                    -   type: favourite
                                        read: false
                                        userId: 1
                                        name: Sarah Colbert
                                        username: sarahc                

    # 20 - Tiago
    /api/countries
        get:
            operationId: R2901
            summary: 'R2901: Get list of countries'
            description: "Gets the list of existing countries in JSON. Access: PUB"
            tags: 
                - 'M04: Information'
            responses:    
                '200':
                    description: "Success"
                    content:
                        application/json:
                            schema: 
                                type: array
                                items:
                                    type: object
                                        properties:
                                            id:    
                                                type: int
                                            abbreviation:
                                                type: string
                                            name: 
                                                type: string
                                example:
                                    -   int: 1
                                        abbreviation: PT
                                        name: Portugal
                                    -   int: 2
                                        abbreviation: ES
                                        name: Spain
                                    -   int: 3
                                        abbreviation: FR
                                        name: France
                                    -   int: 4
                                        abbreviation: USA
                                        name: United States of America
